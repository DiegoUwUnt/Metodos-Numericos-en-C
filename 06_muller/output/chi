#include <stdio.h>
#include <stdlib.h>
#include <math.h>

float f(float x) {
    return pow(x, 3) - (13 * x) - 12;
}

float muller(float xr, float h, float eps, int imax) {
    float x2 = xr;
    float x1 = xr + h * xr;
    float x0 = xr - h * xr;
    int i = 0;
    float h0;
    float h1;
    float d0;
    float d1;
    float ae = 0;
    float dxr;

    do {
        i++;
        printf("%d: ", i);
        h0 = x1 - x0;
        h1 = x2 - x1;
        d0 = (f(x1) - f(x0)) / h0;
        d1 = (f(x2) - f(x1)) / h1;

        float a = (d1 - d0) / (h1 + h0);
        float b = a * h1 + d1;
        float c = f(x2);

        float rad = sqrt((b * b) - 4 * a * c);
        float den;
        if (fabs(b + rad) > fabs(b - rad)) {
            den = b + rad;
        } else {
            den = b - rad;
        }
        dxr = -2 * c / den;
        xr = x2 + dxr;
        printf(" %f | ", xr);
        if (xr != 0) {
            ae = fabs(((xr - x2) / xr)) * 100;
        }
        printf(" %f | ", ae);

        x0 = x1;
        x1 = x2;
        x2 = xr;

    } while (fabs(dxr) > (eps * xr) && i < imax);

    return xr;
}

int main(int argc, char *argv[]) {

    float xr = atof(argv[1]);
    float h = atof(argv[2]);
    float eps = atof(argv[3]);
    int imax = atoi(argv[4]);
    
    float r = muller(xr, h, eps, imax);
    
    //printf("\nResult: %f\n", r);

    return 0;
}